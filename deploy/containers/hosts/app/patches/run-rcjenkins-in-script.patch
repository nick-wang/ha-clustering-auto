--- rc.status.orig	2021-11-08 21:27:19.893924356 +0800
+++ rc.status	2021-11-08 21:27:36.962026473 +0800
@@ -32,63 +32,63 @@
 #    \015          carriage return (without newline)
 #
 
-# Check if the service is used under systemd but not started with
-if test -z "$SYSTEMD_NO_WRAP" && /usr/bin/mountpoint -q /sys/fs/cgroup/systemd; then
-    if test $PPID -ne 1 -a $# -eq 1 ; then
-	_rc_base=
-	_sd_opts=
-	case "$0" in
-	/etc/init.d/boot.*)
-	    _rc_base=${0##*/boot.} ;;
-	/etc/init.d/*|/etc/rc.d/*)
-	    _rc_base=${0##*/} ;;
-	*/rc*)
-	    if test -L "$0"; then
-		_rc_base=`readlink "$0"`
-		_rc_base=${_rc_base##*/}
-		case "$_rc_base" in
-		boot.*) _rc_base=${_rc_base#boot.}
-		esac
-	    else
-		_rc_base=${0##*/rc}
-	    fi
-	    ;;
-	esac
-	_rc_system=$(/usr/bin/systemctl show --system --no-pager -p NeedDaemonReload \
-		     -p UnitFileState -p LoadState "${_rc_base}.service" 2>/dev/null)
-	case "$_rc_system" in
-	*LoadState=masked*)
-	    echo "Error: ${_rc_base} is masked out and forbidden by systemd" 1>&2
-	    exit 2 ;;
-	*UnitFileState=static*)
-	    echo "Skipped: ${_rc_base} is overwritten by a native systemd unit" 1>&2
-	    exit 2 ;;
-	*NeedDaemonReload=yes*)
-	    /usr/bin/systemctl --system --no-pager daemon-reload
-	esac
-	unset _rc_system
-	case "$1" in
-	    status)
-		SYSTEMD_NO_WRAP=1 "$0" "$1"
-		_sd_opts='--lines=0 --full --output=cat'
-		;;
-	    start|stop|reload|restart|try-restart|force-reload)
-		echo "redirecting to systemctl $1 ${_rc_base}.service" 1>&2
-		_sd_opts='--ignore-dependencies'
-		;;
-	    *)	unset _rc_base
-	esac
-	if test -n "$_rc_base" -a -x /usr/bin/systemctl ; then
-	    exec /usr/bin/systemctl $_sd_opts $1 "${_rc_base}.service"
-	fi
-	unset _rc_base _sd_opts
-    fi
-    if test -z "$REDIRECT" -a -x /sbin/showconsole ; then
-	REDIRECT="$(/sbin/showconsole 2>/dev/null)"
-	test -z "$CONSOLE" && CONSOLE=/dev/console
-	export REDIRECT CONSOLE
-    fi
-fi
+# # Check if the service is used under systemd but not started with
+# if test -z "$SYSTEMD_NO_WRAP" && /usr/bin/mountpoint -q /sys/fs/cgroup/systemd; then
+#     if test $PPID -ne 1 -a $# -eq 1 ; then
+# 	_rc_base=
+# 	_sd_opts=
+# 	case "$0" in
+# 	/etc/init.d/boot.*)
+# 	    _rc_base=${0##*/boot.} ;;
+# 	/etc/init.d/*|/etc/rc.d/*)
+# 	    _rc_base=${0##*/} ;;
+# 	*/rc*)
+# 	    if test -L "$0"; then
+# 		_rc_base=`readlink "$0"`
+# 		_rc_base=${_rc_base##*/}
+# 		case "$_rc_base" in
+# 		boot.*) _rc_base=${_rc_base#boot.}
+# 		esac
+# 	    else
+# 		_rc_base=${0##*/rc}
+# 	    fi
+# 	    ;;
+# 	esac
+# 	_rc_system=$(/usr/bin/systemctl show --system --no-pager -p NeedDaemonReload \
+# 		     -p UnitFileState -p LoadState "${_rc_base}.service" 2>/dev/null)
+# 	case "$_rc_system" in
+# 	*LoadState=masked*)
+# 	    echo "Error: ${_rc_base} is masked out and forbidden by systemd" 1>&2
+# 	    exit 2 ;;
+# 	*UnitFileState=static*)
+# 	    echo "Skipped: ${_rc_base} is overwritten by a native systemd unit" 1>&2
+# 	    exit 2 ;;
+# 	*NeedDaemonReload=yes*)
+# 	    /usr/bin/systemctl --system --no-pager daemon-reload
+# 	esac
+# 	unset _rc_system
+# 	case "$1" in
+# 	    status)
+# 		SYSTEMD_NO_WRAP=1 "$0" "$1"
+# 		_sd_opts='--lines=0 --full --output=cat'
+# 		;;
+# 	    start|stop|reload|restart|try-restart|force-reload)
+# 		echo "redirecting to systemctl $1 ${_rc_base}.service" 1>&2
+# 		_sd_opts='--ignore-dependencies'
+# 		;;
+# 	    *)	unset _rc_base
+# 	esac
+# 	if test -n "$_rc_base" -a -x /usr/bin/systemctl ; then
+# 	    exec /usr/bin/systemctl $_sd_opts $1 "${_rc_base}.service"
+# 	fi
+# 	unset _rc_base _sd_opts
+#     fi
+#     if test -z "$REDIRECT" -a -x /sbin/showconsole ; then
+# 	REDIRECT="$(/sbin/showconsole 2>/dev/null)"
+# 	test -z "$CONSOLE" && CONSOLE=/dev/console
+# 	export REDIRECT CONSOLE
+#     fi
+# fi
 
 # Do _not_ be fooled by non POSIX locale
 LC_ALL=POSIX
